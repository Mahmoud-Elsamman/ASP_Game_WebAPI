// <auto-generated />
using System;
using ASP_core_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASP_core_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231113193948_SeedingData")]
    partial class SeedingData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("ASP_core_API.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defeats")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fights")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hitpoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Victories")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 1,
                            Defeats = 0,
                            Defense = 10,
                            Fights = 0,
                            Hitpoints = 100,
                            Intelligence = 10,
                            Name = "Frodo",
                            Strength = 15,
                            UserId = 1,
                            Victories = 0
                        },
                        new
                        {
                            Id = 2,
                            Class = 2,
                            Defeats = 0,
                            Defense = 5,
                            Fights = 0,
                            Hitpoints = 100,
                            Intelligence = 20,
                            Name = "Raistlin",
                            Strength = 5,
                            UserId = 2,
                            Victories = 0
                        });
                });

            modelBuilder.Entity("ASP_core_API.Models.CharacterSkill", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("CharacterSkills");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            SkillId = 2
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 1
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 3
                        });
                });

            modelBuilder.Entity("ASP_core_API.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Fireball"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 20,
                            Name = "Frenzy"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 50,
                            Name = "Blizzard"
                        });
                });

            modelBuilder.Entity("ASP_core_API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Player");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User1",
                            PasswordHash = new byte[] { 117, 183, 182, 87, 195, 212, 190, 66, 30, 115, 158, 167, 62, 137, 158, 242, 139, 135, 143, 229, 232, 225, 248, 47, 25, 64, 18, 118, 226, 122, 210, 159, 122, 122, 85, 247, 66, 96, 73, 54, 36, 28, 53, 141, 120, 239, 4, 66, 42, 44, 151, 219, 200, 194, 253, 16, 152, 38, 103, 210, 28, 230, 89, 36 },
                            PasswordSalt = new byte[] { 27, 124, 151, 161, 231, 151, 81, 27, 30, 21, 251, 199, 180, 35, 203, 239, 83, 25, 105, 215, 34, 94, 79, 10, 153, 230, 113, 72, 157, 214, 88, 7, 62, 241, 148, 188, 215, 119, 232, 125, 5, 50, 131, 155, 139, 193, 194, 128, 224, 166, 155, 80, 195, 47, 209, 223, 225, 75, 206, 118, 28, 65, 90, 118, 140, 234, 7, 61, 129, 252, 199, 63, 118, 79, 164, 154, 16, 175, 17, 8, 121, 216, 209, 151, 225, 79, 235, 50, 241, 32, 255, 154, 67, 54, 126, 240, 74, 163, 159, 177, 147, 210, 135, 114, 152, 58, 130, 206, 165, 227, 65, 129, 235, 83, 20, 82, 59, 181, 170, 55, 92, 142, 210, 189, 211, 182, 159, 142 }
                        },
                        new
                        {
                            Id = 2,
                            Name = "User2",
                            PasswordHash = new byte[] { 117, 183, 182, 87, 195, 212, 190, 66, 30, 115, 158, 167, 62, 137, 158, 242, 139, 135, 143, 229, 232, 225, 248, 47, 25, 64, 18, 118, 226, 122, 210, 159, 122, 122, 85, 247, 66, 96, 73, 54, 36, 28, 53, 141, 120, 239, 4, 66, 42, 44, 151, 219, 200, 194, 253, 16, 152, 38, 103, 210, 28, 230, 89, 36 },
                            PasswordSalt = new byte[] { 27, 124, 151, 161, 231, 151, 81, 27, 30, 21, 251, 199, 180, 35, 203, 239, 83, 25, 105, 215, 34, 94, 79, 10, 153, 230, 113, 72, 157, 214, 88, 7, 62, 241, 148, 188, 215, 119, 232, 125, 5, 50, 131, 155, 139, 193, 194, 128, 224, 166, 155, 80, 195, 47, 209, 223, 225, 75, 206, 118, 28, 65, 90, 118, 140, 234, 7, 61, 129, 252, 199, 63, 118, 79, 164, 154, 16, 175, 17, 8, 121, 216, 209, 151, 225, 79, 235, 50, 241, 32, 255, 154, 67, 54, 126, 240, 74, 163, 159, 177, 147, 210, 135, 114, 152, 58, 130, 206, 165, 227, 65, 129, 235, 83, 20, 82, 59, 181, 170, 55, 92, 142, 210, 189, 211, 182, 159, 142 }
                        });
                });

            modelBuilder.Entity("ASP_core_API.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 1,
                            Damage = 20,
                            Name = "The Master Sword"
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 2,
                            Damage = 5,
                            Name = "Crystal Wand"
                        });
                });

            modelBuilder.Entity("ASP_core_API.Models.Character", b =>
                {
                    b.HasOne("ASP_core_API.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ASP_core_API.Models.CharacterSkill", b =>
                {
                    b.HasOne("ASP_core_API.Models.Character", "Character")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASP_core_API.Models.Skill", "Skill")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ASP_core_API.Models.Weapon", b =>
                {
                    b.HasOne("ASP_core_API.Models.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("ASP_core_API.Models.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
